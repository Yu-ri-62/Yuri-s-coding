# 2차원배열 반복문으로 접근하기
# 2차원 배열: 배열의 원소가 배열인 형태
# [[],[],[]]



arr = [[1, 2, 3],[4, 5, 6, 7],[7, 8],[9],[10,11]]
# arr의 길이: 4
# arr의 모든 원소의 합구하기
sum_v = 0
for i in range(len(arr)):
   # print(arr[i])
    for j in range(len(arr[i])):
        sum_v += arr[i][j]
print(sum_v)


# 배열이 요소인 배열이다
#     숫자가 요소인 배열은 숫자가 여러개
#     배열이 요소인 배열은 배열이 여러개인거다 근데, 각 요소가 배열이니까 또 반복문을 통해서

#열우선순회는 변수로써 접근이 불가능하다


#------------------------------------------------------------------------
# delta : 원하는 순서대로 2차원 배열을 순회하기 위해서 사용
# 상하좌우 순서로 접근할 수 있는 델타
dr = [-1, 1, 0, 0]  #좌,우,상,하
dc = [0, 0, -1, 1]
#      c1   c2  c3
# r0 [0,0][0,1][0,2]
# r1 [1,0][1,1][1,2]
# r2 [2,0][2,1][2.2]
# [1][2][3]
# [4][5][6]
# [7][8][9]
arr = [[1, 2, 3],[4, 5, 6],[7, 8, 9]]
r = 1
c = 1
print(arr[r][c])
r += dr[0]
c += dc[0]
print(arr[r][c])

#상하좌우 연속으로 순회하기
for i in range(4):
    #다음좌표를 계산
    nr = r + dr[i]
    nc = c + dc[i]
    print(arr[nr][nc])

#상하좌우의 합
sum_v = 0
for i in range(4):
    #다음좌표를 계산
    nr = r + dr[i]
    nc = c + dc[i]
    print(arr[nr][nc])
    sum_v += arr[nr][nc]
print(sum_v)

#팔방 순회 순서는 12시 방향부터 시계방향으로 순회하면서 출력
# 상 우상 우 우하 하 좌하 좌 좌상
# 2 3 6 9 8 7 4 1
dr = [-1,-1,0,1,1,1,0,-1]
dc = [0,1,1,1,0,-1,-1,-1]
r = 1
c = 1
for i in range(8):
    nr = r + dr[i]
    nc = c + dc[i]
    print(arr[nr][nc])