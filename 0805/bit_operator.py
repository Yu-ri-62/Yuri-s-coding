# 멱집합 = power set 구하기(멱집합=모든 부분집합)
# 원소가 3개인 집합의 모든 부분집합의 개수:
# 각각의 원소가 2개의 경우의 수를 가짐(포함되거나 안되거나)
# 2 * 2 * 2 = 8 = 2^3
#################################################
# 1을 비트로 표현하면 0001
# 비트를 왼쪽으로 하나 옮기면, 0010 = 2
# 한 번 더 옮기면 0100 = 4
# 한 번 더 옮기면 1000 = 8
# 1을 N번 왼쪽으로 옮기는 비트연산을 하면,
# 원소 개수가 N인 집합의 부분집합 개수와 같다.
###################################################
# 0000
# 0001
# 0010
# 0100
# 1000
# 0011
# 0101
# 0110
# 0111
# 1000
# 2진수 표기법 : 2가되면 한자리가 증가
################################################
arr = [1,2,3]
# 각각의 비트가 arr의 원소를 포함할지 안할지 결정하는 역할
# 해당 비트가 0이면 원소를 포함하지 않고, 1이면 원소를 포함하는 부분집합으로 판단
###################################################
# 0~7 까지 증가하면서 각 비트를 이용해 부분집합 생성
n = 3
arr = [1, 2, 3]
# i의 비트 0 0 0
for i in range(1<<n):  # 8번 반복    / i는 모든 부분집합
    # i의 비트가 1인지 0인지 판단
    # i가 0일 때 비트는 0000
    for j in range(n):
    # 각각의 원소가 포함될지 안될지를 비트랑 비교
        if i & (1<<j):       # 하나의 비트만 1이다
            # &연산의 결과가 0이 아닌 무언가이면 해당 비트는 부분집합에 포함
            print(arr[j], end=" ")
    print()
